on:
    push:
      branches:
        - 'dev'
jobs:
    pylama:
      uses: kalanatd/django-app-on-ecs/.github/workflows/python_pylama.yml@dev
      secrets:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
    create-new-tag:
      name: 'Create Git tags'
      needs: pylama
      secrets:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      uses: kalanatd/django-app-on-ecs/.github/workflows/git_tag.yml@dev
  
    build-and-push-to-ecr:
      name: 'Build and push to ECR'
      needs:
        - create-new-tag
      uses: kalanatd/django-app-on-ecs/.github/workflows/docker_build_push_release.yml@dev
      secrets:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      with:
        TAGS: ${{ needs.create-new-tag.outputs.new_tag }}
        VERSION: ${{ needs.create-new-tag.outputs.release_version }}
        REGISTRY: 593453040104.dkr.ecr.eu-central-1.amazonaws.com
        IMAGE_NAME: django-app-on-ecs
        PUSH: true
 
    # task-definition:
    #   needs:
    #     - create-new-tag
    #     - build-and-push-to-ecr
    #   if: "(needs.build-and-push-to-ecr.result == 'success') && (needs.create-new-tag.outputs.new_tag != '')"
    #   uses: kalanatd/django-app-on-ecs/.github/workflows/aws_ecs_task_definition.yml@dev
    #   secrets:
    #     GH_TOKEN: ${{ secrets.GH_TOKEN }}
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #   with:
    #     TAG: ${{ needs.create-new-tag.outputs.new_tag }}
        
    dash-delete-tag:
      name: Delete tag whenever build-and-push-to-ecr fails
      needs:
        - create-new-tag
        - build-and-push-to-ecr
      if: "always() || (needs.build-and-push-to-ecr.result == 'failure')"
      uses: kalanatd/django-app-on-ecs/.github/workflows/git_delete_tag.yml@dev
      with:
        TAG: ${{ needs.create-new-tag.outputs.new_tag }}
      secrets:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
  
    create-release:
      name: 'Create GitHub release'
      needs:
        - build-and-push-to-ecr
        - create-new-tag
        - dash-delete-tag
      # Only if we have new tag(version), release the new version.
      if: "(needs.build-and-push-to-ecr.result == 'success') && (needs.create-new-tag.outputs.new_tag != '')"
      uses: kalanatd/django-app-on-ecs/.github/workflows/git_release.yml@dev
      secrets:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        TAG: ${{ needs.create-new-tag.outputs.new_tag }}
        VERSION: ${{ needs.create-new-tag.outputs.release_version }}
        CHANGELOG: ${{ needs.create-new-tag.outputs.changelog }}
